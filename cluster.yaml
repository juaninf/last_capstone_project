# An unique identifier for the head node and workers of this cluster.
cluster_name: mattia-deepdi

# The maximum number of workers nodes to launch in addition to the head
# node.
max_workers: 3

# Cloud-provider specific configuration.
provider:
    type: aws
    region: us-east-1
auth:
    ssh_user: ubuntu

docker:
  image: "mattiaformenti/deepdi-test:latest"
  container_name: "deepdi-test"

  run_options:
   - --ulimit nofile=65536:65536

# Tell the autoscaler the allowed node types and the resources they provide.
available_node_types:
    ray.head.default:
        # resources are currently aut-detected
        # resources: {"CPU": 1, "GPU": 1, "custom": 5}
        resources: {}
        node_config:
            InstanceType: t2.medium
            ImageId: ami-04fd28f6f17d1f570

            IamInstanceProfile:
                Arn: arn:aws:iam::920713614559:instance-profile/ray-head-v1
            BlockDeviceMappings:
            - DeviceName: /dev/sda1
              Ebs:
                VolumeSize: 150



    ray.worker.default:
        # The minimum number of worker nodes of this type to launch.
        # This number should be >= 0.
        min_workers: 2
        # The maximum number of worker nodes of this type to launch.
        # This parameter takes precedence over min_workers.
        max_workers: 2
        # For example, to mark a node type as having 1 CPU, 1 GPU, and 5 units of a resource called "custom", set
        resources: {"CPU": 1, "GPU": 1, "custom": 5}
        node_config:
            InstanceType: t2.medium
            ImageId: ami-04fd28f6f17d1f570
            InstanceMarketOptions:
                MarketType: spot

            IamInstanceProfile:
                Arn: arn:aws:iam::920713614559:instance-profile/ray-worker-v1
            BlockDeviceMappings:
            - DeviceName: /dev/sda1
              Ebs:
                VolumeSize: 150
                DeleteOnTermination: true

setup_commands: # Set up each node.
    - pip install torch transformers
    - bash -c "ray start --head --dashboard-host 0.0.0.0 --port=6379 --dashboard-port=8265 && python3 app.py & tail -f /dev/null"